{"version":3,"sources":["components/Navigation/Navigation.module.css","components/Profile/User/User.module.css","components/Profile/Posts/Posts.module.css","components/Profile/Posts/Post/Post.module.css","components/Dialogs/Dialogs.module.css","components/Dialogs/NewMessage/NewMessage.module.css","components/Footer/Footer.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Header/Header.module.css","components/Profile/Banner/Banner.module.css","components/Dialogs/Message/Message.module.css","components/Header/Header.jsx","components/Navigation/Navigation.jsx","components/Footer/Footer.jsx","components/Profile/Posts/Post/Post.jsx","redux/profile-reducer.js","components/Profile/Posts/Posts.jsx","components/Profile/User/User.jsx","components/Profile/Banner/Banner.jsx","components/Profile/Profile.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","redux/dialogs-reducer.js","components/Dialogs/NewMessage/NewMessage.jsx","components/Dialogs/Dialogs.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","App.js","serviceWorker.js","redux/navigation-reducer.js","redux/redux-store.js","index.js"],"names":["module","exports","Header","id","className","s","header","href","logo","src","alt","Navigation","navigation","whrapper","item","link","activeClassName","active","to","Footer","footer","copyright","Post","props","avatar","text","message","like_count","likesCount","initialState","posts","newPostText","profileReducer","state","action","type","newPost","push","newText","Posts","postsElements","map","p","newPostElement","React","createRef","heading","form","textarea","onChange","current","value","dispatch","updateNewPostTextActionCreator","ref","name","placeholder","input","onClick","User","user","photo_whrapper","photo","info","text_asked","Banner","banner","Profile","profile","profilePage","DialogItem","dialog","Message","dialogs","messages","newMessageText","dialogsReducer","newMessage","NewMessage","newMessageElement","new_message","updateNewMessageTextActionCreator","Dialogs","store","getState","dialogsPage","dialogsElements","d","messagesElements","m","messages_whrapper","News","Music","Settings","App","path","render","Boolean","window","location","hostname","match","navigationReducer","reducers","combineReducers","createStore","rerenderEntireTree","ReactDOM","StrictMode","bind","document","getElementById","subscribe","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.acf109be.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigation\":\"Navigation_navigation__3CFy-\",\"whrapper\":\"Navigation_whrapper__3CRU3\",\"item\":\"Navigation_item__3HR4x\",\"link\":\"Navigation_link__2vjnf\",\"active\":\"Navigation_active__1p9R_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"User_user__30DJc\",\"photo\":\"User_photo__3nIWo\",\"info\":\"User_info__2w3GJ\",\"name\":\"User_name__2oel9\",\"text\":\"User_text__2rbuf\",\"text_asked\":\"User_text_asked__11y0H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"Posts_posts__2L3Os\",\"heading\":\"Posts_heading__21dZ0\",\"form\":\"Posts_form__1aNOQ\",\"textarea\":\"Posts_textarea__34Rlc\",\"input\":\"Posts_input__2r4aH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__36OqE\",\"avatar\":\"Post_avatar__3F8CZ\",\"text\":\"Post_text__3z3gn\",\"like_count\":\"Post_like_count__39q_3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"whrapper\":\"Dialogs_whrapper__1Yr7b\",\"messages\":\"Dialogs_messages__15zBG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"new_message\":\"NewMessage_new_message__3bIn7\",\"textarea\":\"NewMessage_textarea__2aRyn\",\"input\":\"NewMessage_input__2L6yO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__2IIgt\",\"copyright\":\"Footer_copyright__RVKsd\",\"logo\":\"Footer_logo__3P61U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItem_dialog__8ZfFp\",\"link\":\"DialogItem_link__1nb4o\",\"active\":\"DialogItem_active__3AIYu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__37K0V\",\"logo\":\"Header_logo__2ZkAR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"banner\":\"Banner_banner__17eoG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__1Qool\"};","import React from 'react'\r\nimport s from './Header.module.css'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header id=\"top\" className={s.header}>\r\n            <a href=\"./../../../../\"><img className={s.logo} src=\"./../../../../images/logo.png\" alt=\"logo\" /></a>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport s from './Navigation.module.css'\r\n\r\nconst Navigation = () => {\r\n    return (\r\n        <nav className={s.navigation}>\r\n            <ul className={s.whrapper}>\r\n                <li className={s.item}>\r\n                    <NavLink className={s.link} activeClassName={s.active} to=\"/profile\">Profile</NavLink>\r\n                </li>\r\n                <li className={s.item}>\r\n                    <NavLink className={s.link} activeClassName={s.active} to=\"/dialogs\">Messages</NavLink>\r\n                </li>\r\n                <li className={s.item}>\r\n                    <NavLink className={s.link} activeClassName={s.active} to=\"/news\">News</NavLink>\r\n                </li>\r\n                <li className={s.item}>\r\n                    <NavLink className={s.link} activeClassName={s.active} to=\"/music\">Music</NavLink>\r\n                </li>\r\n                <li className={s.item}>\r\n                    <NavLink className={s.link} activeClassName={s.active} to=\"/settings\">Settings</NavLink>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navigation","import React from 'react'\r\nimport s from './Footer.module.css'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer className={s.footer}>\r\n            <p className={s.copyright}>Copyright 2020</p>\r\n            <a href=\"./../../../../\"><img className={s.logo} src=\"./../../../images/logo.png\" alt=\"logo\" /></a>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer","import React from 'react'\r\nimport s from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img className={s.avatar} src=\"./../../../../images/user-photo.jpg\" alt=\"user\" />\r\n            <p className={s.text}>{props.message}</p>\r\n            <span className={s.like_count}>{props.likesCount} likes</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post","const ADD_POST = 'ADD-POST'\r\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT'\r\n\r\nlet initialState = {\r\n    posts: [\r\n        { id: 1, message: `I'm doing great today!`, likesCount: 228 },\r\n        { id: 2, message: `React is such a cool thing!`, likesCount: 322 },\r\n        { id: 3, message: `It's my first React program!`, likesCount: 696 }\r\n    ],\r\n    newPostText: ''\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let newPost = {\r\n                id: 5,\r\n                message: state.newPostText,\r\n                likesCount: 998\r\n            }\r\n            state.posts.push(newPost)\r\n            state.newPostText = ''\r\n            return state\r\n        case UPDATE_NEW_POST_TEXT:\r\n            state.newPostText = action.newText\r\n            return state\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = () => ({ type: ADD_POST })\r\nexport const updateNewPostTextActionCreator = (text) =>\r\n    ({ type: UPDATE_NEW_POST_TEXT, newText: text })\r\n\r\nexport default profileReducer","import React from 'react'\r\nimport s from './Posts.module.css'\r\nimport Post from './Post/Post'\r\nimport { addPostActionCreator, updateNewPostTextActionCreator } from '../../../redux/profile-reducer'\r\n\r\nconst Posts = (props) => {\r\n    let postsElements =\r\n        props.posts.map(p => <Post message={p.message} likesCount={p.likesCount} />)\r\n    // let postsElements = postsData.map((p, i) => <Post message={p.message} likesCount={p.likesCount} key={i} />)\r\n\r\n    let newPostElement = React.createRef()\r\n\r\n    let addNewPost = () => {\r\n        props.dispatch(addPostActionCreator())\r\n    }\r\n\r\n    let onPostChange = () => {\r\n        let text = newPostElement.current.value\r\n        props.dispatch(updateNewPostTextActionCreator(text))\r\n    }\r\n\r\n    return (\r\n        <section className={s.posts}>\r\n            <p className={s.heading}>My posts</p>\r\n            <form className={s.form}>\r\n                <textarea className={s.textarea} onChange={onPostChange} ref={newPostElement} value={props.newPostText} name=\"text\" placeholder=\"Your news...\" />\r\n                <input className={s.input} onClick={addNewPost} type=\"button\" value=\"Send\" />\r\n            </form>\r\n            {postsElements}\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Posts","import React from 'react'\r\nimport s from './User.module.css'\r\n\r\nconst User = () => {\r\n    return (\r\n        <section className={s.user}>\r\n            <div className={s.photo_whrapper}>\r\n                <img className={s.photo} src=\"./../../../images/user-photo.jpg\" alt=\"user\" />\r\n            </div>\r\n            <div className={s.info}>\r\n                <h2 className={s.name}>Andrian K.</h2>\r\n                <p className={s.text}><span className={s.text_asked}>Date of Birth:</span>15 February</p>\r\n                <p className={s.text}><span className={s.text_asked}>City:</span>Lviv</p>\r\n                <p className={s.text}><span className={s.text_asked}>Education:</span>TBA</p>\r\n                <p className={s.text}><span className={s.text_asked}>Website:</span>http://andrian-kars.ru</p>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default User","import React from 'react'\r\nimport s from './Banner.module.css'\r\n\r\nconst Banner = () => {\r\n    return (\r\n        <section className={s.banner}>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Banner","import React from 'react'\r\nimport s from './Profile.module.css'\r\nimport Posts from './Posts/Posts'\r\nimport User from './User/User'\r\nimport Banner from './Banner/Banner'\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div className={s.profile}>\r\n            <Banner />\r\n            <User />\r\n            <Posts\r\n                posts={props.profilePage.posts}\r\n                newPostText={props.profilePage.newPostText}\r\n                dispatch={props.dispatch} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile","import React from 'react'\r\nimport s from './DialogItem.module.css'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div className={s.dialog}>\r\n            <NavLink to={\"/dialogs/\" + props.id} className={s.link} activeClassName={s.active}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem","import React from 'react'\r\nimport s from './Message.module.css'\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.message}>\r\n            {props.message}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Message","const ADD_MESSAGE = 'ADD-MESSAGE'\r\nconst UPDATE_NEW_MESSAGE_TEXT = 'UPDATE-NEW-MESSAGE-TEXT'\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        { id: 1, name: 'Ivan' },\r\n        { id: 2, name: 'Lebowski' },\r\n        { id: 3, name: 'Anna' },\r\n        { id: 4, name: 'Andrey' },\r\n        { id: 5, name: 'Egor Kreed' },\r\n        { id: 6, name: 'Julius Caesar' },\r\n        { id: 7, name: 'Donald Trump' },\r\n        { id: 8, name: 'Elon Musk' }\r\n    ],\r\n    messages: [\r\n        { id: 1, message: `Where's the Money, Lebowski?` },\r\n        { id: 2, message: `Hello, how are your things going?` },\r\n        { id: 3, message: `Hi!` }\r\n    ],\r\n    newMessageText: ''\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_MESSAGE:\r\n            let newMessage = {\r\n                id: 4,\r\n                message: state.newMessageText\r\n            }\r\n            state.messages.push(newMessage)\r\n            state.newMessageText = ''\r\n            return state\r\n        case UPDATE_NEW_MESSAGE_TEXT:\r\n            state.newMessageText = action.newText\r\n            return state\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const addMessageActionCreator = () => ({ type: ADD_MESSAGE })\r\nexport const updateNewMessageTextActionCreator = (text) =>\r\n    ({ type: UPDATE_NEW_MESSAGE_TEXT, newText: text })\r\n\r\nexport default dialogsReducer","import React from 'react'\r\nimport s from './NewMessage.module.css'\r\nimport { addMessageActionCreator, updateNewMessageTextActionCreator } from './../../../redux/dialogs-reducer'\r\n\r\nconst NewMessage = (props) => {\r\n    let newMessageElement = React.createRef()\r\n\r\n    let addNewMessage = () => {\r\n        props.dispatch(addMessageActionCreator())\r\n    }\r\n\r\n    let onMessageChange = () => {\r\n        let text = newMessageElement.current.value\r\n        props.dispatch(updateNewMessageTextActionCreator(text))\r\n    }\r\n\r\n    return (\r\n        <div className={s.whrapper}>\r\n            <form className={s.new_message}>\r\n                <textarea className={s.textarea} onChange={onMessageChange}\r\n                    ref={newMessageElement} value={props.newMessageText}\r\n                    name=\"text\" placeholder=\"Message...\" />\r\n                <input className={s.input} onClick={addNewMessage} type=\"button\" value=\"Send\" />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewMessage","import React from 'react'\r\nimport s from './Dialogs.module.css'\r\nimport DialogItem from './DialogItem/DialogItem'\r\nimport Message from './Message/Message'\r\nimport NewMessage from './NewMessage/NewMessage'\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.store.getState().dialogsPage\r\n\r\n    let dialogsElements =\r\n        state.dialogs.map(d => <DialogItem name={d.name} id={d.id} />)\r\n    let messagesElements =\r\n        state.messages.map(m => <Message message={m.message} id={m.id} />)\r\n\r\n    return (\r\n        <div className={s.whrapper}>\r\n            <div className={s.dialogs}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div className={s.messages_whrapper}>\r\n                    {messagesElements}\r\n                </div>\r\n                <NewMessage\r\n                    messages={state.messages}\r\n                    newMessageText={state.newMessageText}\r\n                    dispatch={props.dispatch} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs","import React from 'react'\r\nimport s from './News.module.css'\r\n\r\nconst News = () => {\r\n    return (\r\n        <footer className={s.footer}>\r\n            <p className={s.copyright}>News</p>\r\n            <a href=\"#top\"><img className={s.logo} src=\"./logo.png\" alt=\"logo\" /></a>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default News","import React from 'react'\r\nimport s from './Music.module.css'\r\n\r\nconst Music = () => {\r\n    return (\r\n        <footer className={s.footer}>\r\n            <p className={s.copyright}>Music</p>\r\n            <a href=\"#top\"><img className={s.logo} src=\"./logo.png\" alt=\"logo\" /></a>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Music","import React from 'react'\r\nimport s from './Settings.module.css'\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <footer className={s.footer}>\r\n            <p className={s.copyright}>Settings</p>\r\n            <a href=\"#top\"><img className={s.logo} src=\"./logo.png\" alt=\"logo\" /></a>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Settings","import React from 'react'\nimport './App.css'\nimport Header from './components/Header/Header';\nimport Navigation from './components/Navigation/Navigation';\nimport Footer from './components/Footer/Footer';\nimport Profile from './components/Profile/Profile';\nimport Dialogs from './components/Dialogs/Dialogs';\nimport News from './components/News/News';\nimport Music from './components/Music/Music';\nimport Settings from './components/Settings/Settings';\nimport { Route } from 'react-router-dom';\n\nfunction App(props) {\n  return (\n    <div className=\"app-whrapper\">\n      <div className=\"container\">\n        <Header />\n        <Navigation />\n        <main className=\"main\">\n          <Route path=\"/profile\" render={() => <Profile\n            profilePage={props.state.profilePage} dispatch={props.dispatch} />} />\n          <Route path=\"/dialogs\" render={() => <Dialogs\n            store={props.store} dispatch={props.dispatch} />} />\n          <Route path=\"/news\" render={() => <News />} />\n          <Route path=\"/music\" render={() => <Music />} />\n          <Route path=\"/settings\" render={() => <Settings />} />\n        </main>\n        <Footer />\n      </div>\n    </div>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","let initialState = {\r\n\r\n}\r\n\r\nconst navigationReducer = (state = initialState, action) => {\r\n\r\n\r\n    return state\r\n}\r\n\r\nexport default navigationReducer","import { createStore, combineReducers } from 'redux'\r\nimport profileReducer from \"./profile-reducer\"\r\nimport dialogsReducer from \"./dialogs-reducer\"\r\nimport navigationReducer from \"./navigation-reducer\"\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    navigation: navigationReducer\r\n})\r\n\r\nlet store = createStore(reducers)\r\n\r\nexport default store","import React from 'react'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport store from './redux/redux-store'\n\nlet rerenderEntireTree = (state) => {\n    ReactDOM.render(\n        <React.StrictMode>\n            <BrowserRouter>\n                <App state={state} dispatch={store.dispatch.bind(store)} store={store} />\n            </BrowserRouter>\n        </React.StrictMode>,\n        document.getElementById('root')\n    )\n}\n\nrerenderEntireTree(store.getState())\n\nstore.subscribe(() => {\n    let state = store.getState()\n    rerenderEntireTree(state)\n})\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}